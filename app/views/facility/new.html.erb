<div class='background'>
    <%= link_to "Back", :back, class:'btn btn-default back'%>
    <div class='surrounding'>
        <div class='middleBox boxInfo newReviewBoxInfo'></div>
        <div class='accountHeader outer boxInfo newReviewBoxInfo'>
            <h2>Review a Room</h2>

<form action="/facility" method="POST">
    <!-- TODO:
    - Validate all these things
    - Make the building name and room number auto complete
    - Get facility types via model and make facility type a drop down
    -->
    <%= tag(:input, :type => "hidden", :name => request_forgery_protection_token.to_s, :value => form_authenticity_token) %>
    <label class="input-header">
        Enter the building name
    </label>
    <%= text_field_tag(:building, "", class:"form-control", required: true) %>
    <br />

    <label class="input-header">
        Enter the room number
    </label>
    <%= text_field_tag(:room, "", class:"form-control", required: true) %>
    <br />

    <label class="input-header">
        Select the facility type
    </label>
    <%= select_tag(:facility, options_for_select(@facilitytypes), class:"form-control") %>
    <br />

    <label class="input-header">
        Enter the review
    </label>
    <%= text_area_tag(:review, "", class:"form-control", required: true) %>
    <br />

    <label class="input-header">
        Enter a rating out of 5
    </label>
    <%= select_tag(:rating, options_for_select([1,2,3,4,5]), class:"form-control") %>
    <br />

    <button type="submit" class="btn btn-default">Submit</button>
</form>
</div>
</div>
</div>


<%= javascript_tag do %>

var buildingAutoComplete = new autoComplete({
    selector: document.getElementById("building"),
    minChars: 2,
    source: function(term, suggest){
        term = term.toLowerCase();
        var choices = <%= raw @buildings.to_json %>
        var matches = [];
        for (i=0; i< choices.length; i++)
            if (~choices[i].toLowerCase().indexOf(term)) matches.push(choices[i]);
        suggest(matches);
    }
});

var roomAutoComplete = new autoComplete({
    selector: document.getElementById("room"),
    minChars: 1,
    source: function(term, suggest){
        term = term.toLowerCase();
        var choices = <%= raw @rooms.to_json %>
        var matches = [];
        for (i=0; i< choices.length; i++)
            if (~choices[i].toLowerCase().indexOf(term)) matches.push(choices[i]);
        suggest(matches);
    }
});
<% end %>
